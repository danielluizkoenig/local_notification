{"version":3,"file":"form_control.min.js","sources":["../src/form_control.js"],"sourcesContent":["/* eslint-disable no-console */\ndefine(['jquery', 'core/modal_factory', 'core/modal', 'core/str'], function($, ModalFactory, Modal, Str) {\n\n  const QUERY_ID_VALUE = \"5\";\n  const NO_END_DATE = \"0\";\n\n  // Função para converter timestamp em data\n  let converteTimestamp = function(time) {\n      let timestampInMilliseconds = time * 1000;\n      let date = new Date(timestampInMilliseconds);\n      let day = String(date.getDate()).padStart(2, \"0\");\n      let month = String(date.getMonth() + 1).padStart(2, \"0\");\n      let year = date.getFullYear();\n      return day + \"/\" + month + \"/\" + year;\n  };\n\n  // Função para exibir o modal\n  let exibirModalAviso = async function() {\n      try {\n          const bodyText = await Str.get_string(\"courseend_empty\", \"local_notification\");\n          // Usando ModalFactory como fallback, já que Modal.create falhou\n          const modal = await ModalFactory.create({\n              type: ModalFactory.types.DEFAULT,\n              title: 'Aviso',\n              body: bodyText,\n              large: false\n          });\n          modal.show();\n          $(\"#id_notification_query_id\").val('');\n      } catch (error) {\n          console.error('Erro ao criar o modal:', error);\n      }\n  };\n\n  // Função para verificar o tipo de notificação\n  let verificaNottificacaoTipo = function($endcourse) {\n      let selectedValue = $(\"#id_notification_query_id\").val();\n      $(\"#id_submitbutton\").removeAttr(\"disabled\");\n\n      if (selectedValue === QUERY_ID_VALUE) {\n          $(\"#id_time\").attr(\"readonly\", \"readonly\");\n\n          if ($endcourse === NO_END_DATE) {\n              exibirModalAviso(); // Chama a função assíncrona\n              $(\"#id_submitbutton\").attr(\"disabled\", \"disabled\");\n              $(\"#id_time\").val(\"\");\n          } else {\n              $(\"#id_time\").val(converteTimestamp($endcourse));\n          }\n      } else {\n          $(\"#id_time\").removeAttr(\"readonly\");\n      }\n  };\n\n  // Retorna o objeto com a função init\n  return {\n      init: function($endcourse) {\n          $(\"#id_notification_query_id\").change(function() {\n              verificaNottificacaoTipo($endcourse);\n          });\n\n          $(document).ready(function() {\n              verificaNottificacaoTipo($endcourse);\n          });\n      }\n  };\n});"],"names":["define","$","ModalFactory","Modal","Str","verificaNottificacaoTipo","$endcourse","selectedValue","val","removeAttr","attr","async","bodyText","get_string","create","type","types","DEFAULT","title","body","large","show","error","console","exibirModalAviso","time","date","Date","String","getDate","padStart","getMonth","getFullYear","converteTimestamp","init","change","document","ready"],"mappings":"AACAA,yCAAO,CAAC,SAAU,qBAAsB,aAAc,aAAa,SAASC,EAAGC,aAAcC,MAAOC,SAkC9FC,yBAA2B,SAASC,gBAChCC,cAAgBN,EAAE,6BAA6BO,MACnDP,EAAE,oBAAoBQ,WAAW,YAlCd,MAoCfF,eACAN,EAAE,YAAYS,KAAK,WAAY,YApCnB,MAsCRJ,aAzBWK,2BAETC,eAAiBR,IAAIS,WAAW,kBAAmB,6BAErCX,aAAaY,OAAO,CACpCC,KAAMb,aAAac,MAAMC,QACzBC,MAAO,QACPC,KAAMP,SACNQ,OAAO,KAELC,OACNpB,EAAE,6BAA6BO,IAAI,IACrC,MAAOc,OACLC,QAAQD,MAAM,yBAA0BA,QAapCE,GACAvB,EAAE,oBAAoBS,KAAK,WAAY,YACvCT,EAAE,YAAYO,IAAI,KAElBP,EAAE,YAAYO,IAxCF,SAASiB,UAEzBC,KAAO,IAAIC,KADsB,IAAPF,aAEpBG,OAAOF,KAAKG,WAAWC,SAAS,EAAG,KAGhC,IAFDF,OAAOF,KAAKK,WAAa,GAAGD,SAAS,EAAG,KAEzB,IADhBJ,KAAKM,cAmCUC,CAAkB3B,cAGxCL,EAAE,YAAYQ,WAAW,mBAK1B,CACHyB,KAAM,SAAS5B,YACXL,EAAE,6BAA6BkC,QAAO,WAClC9B,yBAAyBC,eAG7BL,EAAEmC,UAAUC,OAAM,WACdhC,yBAAyBC"}